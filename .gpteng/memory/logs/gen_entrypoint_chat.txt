
2024-06-13T09:53:22.517859
================================ System Message ================================

You will get information about a codebase that is currently on disk in the current folder.
The user will ask you to write a script that runs the code in a specific way.
You will answer with code blocks that include all the necessary terminal commands.
Do not install globally. Do not use sudo.
Do not explain the code, just give the commands.
Do not use placeholders, use example values (like . for a folder argument) if necessary.


================================ Human Message =================================


        Make a unix script that
        a) installs dependencies
        b) runs all necessary parts of the codebase (in parallel if necessary)
        
Information about the codebase:

```
File: structure
1 company_description_prompts
2 requirements.txt
3 src
4 __init__.py
5 main.py
6 prompt_generator.py
7 csv_reader.py
8 data
9 prompts.csv

File: requirements.txt
1 pytest
2 dataclasses

File: src/__init__.py
1 # empty file

File: src/main.py
1 from prompt_generator import PromptGenerator
2 from csv_reader import CSVReader
3 
4 def main():
5     csv_reader = CSVReader('data/prompts.csv')
6     prompts = csv_reader.read_prompts()
7     prompt_generator = PromptGenerator(prompts)
8     generated_prompts = prompt_generator.generate_prompts()
9     for prompt in generated_prompts:
10         print(prompt)
11 
12 if __name__ == '__main__':
13     main()

File: src/prompt_generator.py
1 from dataclasses import dataclass
2 import random
3 
4 @dataclass
5 class Prompt:
6     company_name: str
7     industry: str
8     description: str
9 
10 class PromptGenerator:
11     def __init__(self, prompts):
12         self.prompts = prompts
13 
14     def generate_prompts(self):
15         generated_prompts = []
16         for prompt in self.prompts:
17             company_name = prompt.company_name
18             industry = prompt.industry
19             description = prompt.description
20             generated_prompt = f"Can you describe the company {company_name} in the {industry} industry? {description}"
21             generated_prompts.append(generated_prompt)
22         return generated_prompts

File: src/csv_reader.py
1 import csv
2 from dataclasses import dataclass
3 from typing import List
4 
5 @dataclass
6 class Prompt:
7     company_name: str
8     industry: str
9     description: str
10 
11 class CSVReader:
12     def __init__(self, file_path):
13         self.file_path = file_path
14 
15     def read_prompts(self) -> List[Prompt]:
16         prompts = []
17         with open(self.file_path, 'r') as file:
18             reader = csv.reader(file)
19             next(reader)  # skip header
20             for row in reader:
21                 company_name, industry, description = row
22                 prompt = Prompt(company_name, industry, description)
23                 prompts.append(prompt)
24         return prompts

File: data/prompts.csv
1 company_name,industry,description
2 Google,Technology,A multinational technology company
3 Amazon,E-commerce,An American multinational technology company
4 Microsoft,Software,A multinational technology company

```

================================== Ai Message ==================================

Here is the Unix script that installs dependencies and runs the codebase:
```
#!/bin/bash

# Install dependencies
python -m pip install --user -r requirements.txt

# Run the code
python src/main.py
```
